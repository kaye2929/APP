#Investigations
nls_crs %>% count(id)
nls_crs %>% count(crsecred_v2)
max(nls_crs$crsecred_v2)
min(nls_crs$crsecred_v2)
mean(nls_crs$crsecred_v2)
nls_crs %>% count(numgrade_v2)
max(nls_crs$numgrade_v2)
min(nls_crs$numgrade_v2)
mean(nls_crs$numgrade_v2)
#Create crsecred_v3
nls_crs <- nls_crs %>% mutate(crsecred_v3 = ifelse(is.na(numgrade_v2), NA, crsecred_v2))
table(nls_crs$crsecred_v3)
nls_crs %>% count(crsecred_v3)
max(nls_crs$crsecred_v3)
min(nls_crs$crsecred_v3)
mean(nls_crs$crsecred_v3)
#Investigation of numgrade_v2
nls_crs %>% count(numgrade_v2, gradtype == 9)
nls_crs %>% count(numgrade_v2, gradtype == 1)
max(nls_crs$crsecred_v3, nls_crs$gradtype == 9)
max(nls_crs$crsecred_v3, nls_crs$gradtype == 1)
min(nls_crs$crsecred_v3, nls_crs$gradtype == 9)
min(nls_crs$crsecred_v3, nls_crs$gradtype == 1)
#Create 'qualpts'
nls_crs <- nls_crs %>% mutate(qualpts=crsecred_v3*numgrade_v2)
nls_crs <- nls_crs %>% group_by(id, transnum) %>%
summarise_at(vars(qualpts, crsecred_v3), .funs = list(sum = ~sum(., na.rm = TRUE)))
nls_crs <- nls_crs %>% mutate(inst_gpa=(qualpts_sum/crsecred_v3_sum))
table(nls_crs$inst_gpa)
nls_crs %>% count(inst_gpa)
max(nls_crs$inst_gpa)
min(nls_crs$inst_gpa)
mean(nls_crs$inst_gpa)
nls_crs %>% count(inst_gpa)
max(nls_crs$inst_gpa, na.rm = TRUE)
min(nls_crs$inst_gpa, na.rm = TRUE)
mean(nls_crs$inst_gpa, na.rm = TRUE)
summary(nls_crs$inst_gpa)
nls_crs <- nls_crs %>% group_by(id, transnum, termnum) %>%
summarise_at(vars(qualpts, crsecred_v3), .funs = list(sum = ~sum(., na.rm = TRUE))) %>%
mutate(gpa = round(qualpts_sum/crsecred_v3_sum, 2))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(collapse = TRUE, comment = "#>", highlight = TRUE)
library(tidyverse)
library(labelled)
load(url("https://github.com/anyone-can-cook/rclass1/raw/master/data/nls72/nls_crs.RData"))
nls_crs <- nls_crs %>%
arrange(id, transnum, termnum, crsename)
nls_crs <- nls_crs %>% select(id, transnum, termnum, crsecred, gradtype, crsgrada, crsgradb, crsecip, crsename, crsgrada_fac, numgrade, crsgradb_v2, crsecred_v2, numgrade_v2)
names(nls_crs)
str(nls_crs)
class(nls)
typeof(nls_crs$transnum)
nls_crs %>% select(transnum) %>% var_label()
nls_crs %>% count(transnum)
min(nls_crs$transnum)
max(nls_crs$transnum)
mean(nls_crs$transnum)
typeof(nls_crs$termnum)
nls_crs %>% select(termnum) %>% var_label()
nls_crs %>% count(termnum)
min(nls_crs$termnum)
max(nls_crs$termnum)
mean(nls_crs$termnum)
typeof(nls_crs$crsecred_v2)
nls_crs %>% select(crsecred_v2) %>% var_label()
nls_crs %>% count(crsecred_v2)
min(nls_crs$crsecred_v2)
max(nls_crs$crsecred_v2)
mean(nls_crs$crsecred_v2)
typeof(nls_crs$gradtype)
nls_crs %>% select(gradtype) %>% var_label()
nls_crs %>% count(gradtype)
min(nls_crs$gradtype)
max(nls_crs$gradtype)
mean(nls_crs$gradtype)
typeof(nls_crs$numgrade_v2)
nls_crs %>% select(numgrade_v2) %>% var_label()
nls_crs %>% count(numgrade_v2)
min(nls_crs$numgrade_v2)
max(nls_crs$numgrade_v2)
mean(nls_crs$numgrade_v2)
#Investigations
nls_crs %>% count(id)
nls_crs %>% count(crsecred_v2)
max(nls_crs$crsecred_v2)
min(nls_crs$crsecred_v2)
mean(nls_crs$crsecred_v2)
nls_crs %>% count(numgrade_v2)
max(nls_crs$numgrade_v2)
min(nls_crs$numgrade_v2)
mean(nls_crs$numgrade_v2)
#Create crsecred_v3
nls_crs <- nls_crs %>% mutate(crsecred_v3 = ifelse(is.na(numgrade_v2), NA, crsecred_v2))
table(nls_crs$crsecred_v3)
nls_crs %>% count(crsecred_v3)
max(nls_crs$crsecred_v3)
min(nls_crs$crsecred_v3)
mean(nls_crs$crsecred_v3)
#Investigation of numgrade_v2
nls_crs %>% count(numgrade_v2, gradtype == 9)
nls_crs %>% count(numgrade_v2, gradtype == 1)
max(nls_crs$crsecred_v3, nls_crs$gradtype == 9)
max(nls_crs$crsecred_v3, nls_crs$gradtype == 1)
min(nls_crs$crsecred_v3, nls_crs$gradtype == 9)
min(nls_crs$crsecred_v3, nls_crs$gradtype == 1)
#Create 'qualpts'
nls_crs <- nls_crs %>% mutate(qualpts=crsecred_v3*numgrade_v2)
nls_crs_1 <- nls_crs %>% group_by(id, transnum) %>%
summarise_at(vars(qualpts, crsecred_v3), .funs = list(sum = ~sum(., na.rm = TRUE)))
nls_crs_1 <- nls_crs_1 %>% mutate(inst_gpa=(qualpts_sum/crsecred_v3_sum))
nls_crs_1 %>% count(inst_gpa)
max(nls_crs_1$inst_gpa, na.rm = TRUE)
min(nls_crs_1$inst_gpa, na.rm = TRUE)
mean(nls_crs_1$inst_gpa, na.rm = TRUE)
summary(nls_crs_1$inst_gpa)
nls_crs_2 <- nls_crs %>% group_by(id, transnum, termnum) %>%
summarise_at(vars(qualpts, crsecred_v3), .funs = list(sum = ~sum(., na.rm = TRUE))) %>%
mutate(gpa = round(qualpts_sum/crsecred_v3_sum, 2))
nls_crs_2 <- nls_crs_2 %>% mutate(term_gpa=(term_qualpts/term_credits))
summary(nls_crs_2$term_gpa)
summary(nls_crs_2$term_gpa)
View(nls_crs_2)
nls_crs_2 <- nls_crs %>% group_by(id, transnum, termnum) %>%
summarise_at(vars(qualpts, crsecred_v3), .funs = list(sum = ~sum(., na.rm = TRUE))) %>%
mutate(gpa = round(qualpts_sum/crsecred_v3_sum, 2))
nls_crs_2 <- nls_crs_2 %>% mutate(term_gpa=(qualpts_sum/crsecred_v3_sum))
nls_crs_2 %>% count(term_gpa)
max(nls_crs_2$term_gpa, na.rm = TRUE)
min(nls_crs_2$term_gpa, na.rm = TRUE)
mean(nls_crs_2$term_gpa, na.rm = TRUE)
summary(nls_crs_2$term_gpa)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(collapse = TRUE, comment = "#>", highlight = TRUE)
library(tidyverse)
library(haven)
library(labelled)
# Read Stata data into R using read_data() function from haven package
age_f16_allvars_allobs <- read_dta(file="https://github.com/anyone-can-cook/rclass1/raw/master/data/ipeds/ef/age/ef_age_ic_fall_2016.dta", encoding=NULL)
# Rename a couple variables
age_f16_allvars_allobs <- age_f16_allvars_allobs %>% rename(agegroup=efbage, levstudy=lstudy)
# List variables and variable labels
names(age_f16_allvars_allobs)
age_f16_allvars_allobs %>% var_label()
# Create dataframe that keeps observations where age-group equals `1` (1. All age categories total)
agegroup1_obs <- age_f16_allvars_allobs %>%
select(fullname,unitid,agegroup,levstudy,efage09,stabbr,locale,sector) %>% # subset the dataframe and only keep certain columns
filter(agegroup==1) %>% # filter for obs where age-group == 1
select(-agegroup)
glimpse(agegroup1_obs)
names(agegroup1_obs)
var_label(agegroup1_obs)
agegroup1_obs
unitid_levstudy <- agegroup1_obs %>% group_by(unitid) %>% count(levstudy)
table(unitid_levstudy$n)
unitid_obs <- agegroup1_obs %>% count(unitid)
table(unitid_obs$n)
agegroup1_obs_tidy <- agegroup1_obs %>%
pivot_wider(
names_from = levstudy,
values_from = efage09
)
agegroup1_obs_tidy %>% count(unitid)
agegroup1_obs_tidy_v2 <- agegroup1_obs %>% mutate(level=as.character(levstudy)) %>% select(-c(levstudy)) %>% pivot_wider(names_from = level, values_from = efage09)
head(agegroup1_obs_tidy_v2, n=10)
head(agegroup1_obs_tidy, n=10)
load(url("https://github.com/anyone-can-cook/rclass1/raw/master/data/nces_digest/nces_digest_table_208_30.RData"))
# Convert character variables for teacher totals to integers
table208_30[2:6] <- data.frame(lapply(table208_30[2:6], as.integer))
table208_30
table208_30_tidy <- table208_30 %>% pivot_longer(cols = starts_with("tot_fall_"), names_to = "year", values_to = "numteachers", names_prefix = "tot_fall_") %>% pivot_wider(names_from = state, values_from = numteachers)
head(agegroup1_obs_tidy)
agegroup1_obs_tidy_v2 = agegroup1_obs %>%
mutate(level = recode(as.integer(levstudy), `1` = "all", `2` = "ug", `5` = "grad")) %>%
select(-levstudy) %>%
pivot_wider(names_from = level, values_from = efage09)
head(agegroup1_obs_tidy_v2, n=10)
head(agegroup1_obs_tidy, n=10)
head(table208_30_tidy)
table208_30_tidy <- table208_30 %>% pivot_longer(cols = starts_with("tot_fall_"), names_to = "year", values_to = "numteachers", names_prefix = "tot_fall_")
head(table208_30_tidy)
install.packages("readxl")
install.packages("xlsx")
install.packages(c("boot", "foreign", "Matrix", "nlme"))
############### Script for Cleaning LADOT Data - OD by NCs #################
# Set Up ########
setwd("C:\Project\APP\APP\scripts\LADOT_working")
############### Script for Cleaning LADOT Data - OD by NCs #################
# Set Up ########
setwd("C:/Project/APP/APP/scripts/LADOT_working")
## load packages
pkgs <- c("tidyverse", "readxl")
lapply(pkgs, library, characters.only = TRUE)
lapply(pkgs, library, character.only = TRUE)
install.packages(c("tidyverse","readxl"))
lapply(pkgs, library, character.only = TRUE)
## load data
my_excel <- read_excel("../../data/LADOT/CPRA #22-10589 Data/2019 Neighborhood Council Trip Matrix.xlsx", sheet = 1)
View(my_excel)
names(my_excel)
my_excel2 <- pivot_longer(my_excel, cols = -c("Origin\\Destination"), names_to = "Destination NC", values_to = "Trips")
View(my_excel2)
?rename
## load data
my_excel <- read_excel("../../data/LADOT/CPRA #22-10589 Data/2019 Neighborhood Council Trip Matrix.xlsx", sheet = 1) %>% rename("Origin NC" = "Origin\\Destination")
my_excel2 <- pivot_longer(my_excel, cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips")
View(my_excel2)
lapply(my_excel2, attributes)
lapply(my_excel2, class)
lapply(my_excel2, summary)
?mdy
readxl::excel_sheets("../../data/LADOT/CPRA #22-10589 Data/2019 Neighborhood Council Trip Matrix.xlsx")
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("rJava")
library(xlsx)
install.packages("rJava", type = 'source')
library(xlsx)
Sys.getenv("R_ARCH")
system("java -version")
setwd("C:/Project/APP/APP/data/LADOT/CPRA #22-10589 Data")
## load packages
pkgs <- c("tidyverse", "readxl")
lapply(pkgs, library, character.only = TRUE)
rm(pkgs)
## load data
my_excel <- read_excel("2019 Neighborhood Council Trip Matrix.xlsx", sheet = 1) %>%
rename("Origin NC" = "Origin\\Destination")
my_excel2 <- my_excel %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy("Jan 2019"))
library(lubridate)
my_excel2 <- my_excel %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy("Jan 2019"))
View(my_excel2)
class(my_excel2$Month)
typeof(my_excel2$Month)
my_excel2 <- my_excel %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste("Jan", "2019")))
View(my_excel2)
my_excel2 <- my_excel %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste("Jan","1","2019")))
head(my_excel2$Month)
my_excel2 <- my_excel %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste("Jan","2019")))
head(my_excel2$Month)
## load data
my_excel <- read_excel("2019 Neighborhood Council Trip Matrix.xlsx", sheet = "Jan") %>%
rename("Origin NC" = "Origin\\Destination")
my_excel2 <- my_excel %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste("Jan","1","2019")))
View(my_excel2)
## load data
my_excel <- read_excel(paste("2019", "Neighborhood Council Trip Matrix.xlsx"), sheet = "Jan") %>%
rename("Origin NC" = "Origin\\Destination")
my_excel2 <- my_excel %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste("Jan","1","2019")))
View(my_excel2)
sheet_names <- excel_sheets("2019 Neighborhood Council Trip Matrix.xlsx")
## obtain sheet names
wkb_name <- paste("2019", "Neighborhood Council Trip Matrix.xlsx")
sheet_names <- excel_sheets(wkb_name)
## load data
my_excel <- read_excel(wkb_name, sheet = "Jan") %>%
rename("Origin NC" = "Origin\\Destination")
## load & clean data
my_excel <- read_excel(wkb_name, sheet = "Jan") %>%
rename("Origin NC" = "Origin\\Destination") %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste("Jan","1","2019")))
rm(my_excel2)
# Scratch ########
years <- c("2019","2020","2021","2022")
for (yr in years) {
for (one_sheet in sheet_names) {
paste(one_sheet, years)
}
}
for (yr in years) {
for (one_sheet in sheet_names) {
print(paste(one_sheet, years))
}
}
for (yr in years) {
for (one_sheet in sheet_names) {
print(mdy(paste(one_sheet, years)))
}
}
print(mdy(paste(one_sheet, "1", years)))
for (yr in years) {
for (one_sheet in sheet_names) {
print(mdy(paste(one_sheet, "1", yr)))
}
}
for (yr in years) {
for (one_sheet in sheet_names) {
print(mdy(paste(one_sheet, "1", yr)))
}
} %>% length()
temp <- for (yr in years) {
for (one_sheet in sheet_names) {
print(mdy(paste(one_sheet, "1", yr)))
}
}
for (yr in years) {
for (one_sheet in sheet_names) {
temp <- print(mdy(paste(one_sheet, "1", yr)))
}
}
append(temp, one_sheet)
append(yr, one_sheet)
temp2 <- mdy("1/1/2022")
append(temp, temp2)
output <- NULL
for (yr in years) {
for (one_sheet in sheet_names) {
temp <- print(mdy(paste(one_sheet, "1", yr)))
append(output, temp)
}
}
append(output, temp)
output <- NULL
for (yr in years) {
for (one_sheet in sheet_names) {
temp <- print(mdy(paste(one_sheet, "1", yr)))
output <- append(output, temp)
}
}
output <- NULL
for (one_month in sheet_names) {
one_sheet <- read_excel(wkb_name, sheet = one_month) %>%
rename("Origin NC" = "Origin\\Destination") %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste(one_month,"1",yr)))
output <- bind_rows(output, one_sheet)
}
## load & clean data
my_excel <- read_excel(wkb_name, sheet = "Jan") %>%
rename("Origin NC" = "Origin\\Destination") %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste("Jan","1","2019")))
my_excel <- read_excel(wkb_name, sheet = "Jan") %>%
rename("Origin NC" = "Origin\\Destination")
## load & clean data
my_excel <- read_excel(wkb_name, sheet = "Jan") %>%
rename("Origin NC" = "Origin\\Destination") %>%
select(-c("Origin NC")) %>%
mutate_all(as.numeric())
?mutate_all
## load & clean data
my_excel <- read_excel(wkb_name, sheet = "Jan") %>%
rename("Origin NC" = "Origin\\Destination") %>%
select(-c("Origin NC")) %>%
mutate_all(as.numeric)
View(my_excel)
## load & clean data
my_excel <- read_excel(wkb_name, sheet = "Jan") %>%
rename("Origin NC" = "Origin\\Destination") %>%
mutate_at(-c("Origin NC"), as.numeric)
## load & clean data
my_excel <- read_excel(wkb_name, sheet = "Jan") %>%
rename("Origin NC" = "Origin\\Destination") %>%
mutate_if(!is.numeric(), as.numeric)
## load & clean data
my_excel <- read_excel(wkb_name, sheet = "Jan") %>%
rename("Origin NC" = "Origin\\Destination") %>%
mutate_if(!is.numeric, as.numeric)
## load & clean data
my_excel <- read_excel(wkb_name, sheet = "Jan") %>%
rename("Origin NC" = "Origin\\Destination") %>%
mutate_at(vars(-c("Origin NC")), as.numeric)
output <- NULL
# read, clean, and append all the sheets from the specific workbook
for (one_month in sheet_names) {
one_sheet <- read_excel(wkb_name, sheet = one_month) %>%
rename("Origin NC" = "Origin\\Destination") %>%
mutate_at(vars(-c("Origin NC")), as.numeric) %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste(one_month,"1",yr)))
output <- bind_rows(output, one_sheet)
}
View(output)
output %>% filter(is.na(Trips))
output <- NULL
# read, clean, and append all the sheets from the specific workbook
for (one_month in sheet_names) {
one_sheet <- read_excel(wkb_name, sheet = one_month) %>%
rename("Origin NC" = "Origin\\Destination") %>%
# mutate_at(vars(-c("Origin NC")), as.numeric) %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste(one_month,"1",yr)))
output <- bind_rows(output, one_sheet)
}
output %>% filter(is.na(Trips))
View(output)
tail(output)
my_excel2 <- read_excel(paste("2022", "Neighborhood Council Trip Matrix.xlsx"), sheet = "Aug") %>%
rename("Origin NC" = "Origin\\Destination")
lapply(myexcel2, class)
lapply(my_excel2, class)
temp = lapply(my_excel2, class)
View(temp)
temp = lapply(my_excel2, typeof)
View(temp)
temp = lapply(my_excel2, class)
View(temp)
rlang::last_error()
View(my_excel2)
output <- NULL
sheet_names <- excel_sheets(wkb_name)
# read, clean, and append all the sheets from the specific workbook
for (one_month in sheet_names) {
one_sheet <- read_excel(wkb_name, sheet = one_month) %>%
rename("Origin NC" = "Origin\\Destination") %>%
mutate_at(vars(-c("Origin NC")), as.numeric) %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste(one_month,"1",yr)))
output <- bind_rows(output, one_sheet)
}
View(output)
output %>% filter(is.na(Trips))
summary(output$Trips)
# read, clean, and append all the sheets from the specific workbook
for (one_month in sheet_names) {
one_sheet <- read_excel(wkb_name, sheet = one_month) %>%
rename("Origin NC" = "Origin\\Destination") %>%
mutate_at(vars(-c("Origin NC")), as.double) %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste(one_month,"1",yr)))
output <- bind_rows(output, one_sheet)
}
output <- NULL
# read, clean, and append all the sheets from the specific workbook
for (one_month in sheet_names) {
one_sheet <- read_excel(wkb_name, sheet = one_month) %>%
rename("Origin NC" = "Origin\\Destination") %>%
mutate_at(vars(-c("Origin NC")), as.double) %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste(one_month,"1",yr)))
output <- bind_rows(output, one_sheet)
}
output %>% filter(is.na(Trips))
# read, clean, and append all the sheets from the specific workbook
for (one_month in sheet_names) {
one_sheet <- read_excel(wkb_name, sheet = one_month) %>%
rename("Origin NC" = "Origin\\Destination") %>%
mutate_at(vars(-c("Origin NC")), as.integer) %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste(one_month,"1",yr)))
output <- bind_rows(output, one_sheet)
}
output %>% filter(is.na(Trips))
output <- NULL
# read, clean, and append all the sheets from the specific workbook
for (one_month in sheet_names) {
one_sheet <- read_excel(wkb_name, sheet = one_month) %>%
rename("Origin NC" = "Origin\\Destination") %>%
# mutate_at(vars(-c("Origin NC")), as.numeric) %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste(one_month,"1","2019")))
output <- bind_rows(output, one_sheet)
}
rlang::last_error()
rlang::last_trace()
my_excel2 <- read_excel(paste("2019", "Neighborhood Council Trip Matrix.xlsx"), sheet = "Aug") %>%
rename("Origin NC" = "Origin\\Destination")
class(my_excel2$`HOLLYWOOD UNITED NC`)
temp = lapply(my_excel2, class)
View(temp)
my_excel2$`HOLLYWOOD UNITED NC`
output <- NULL
for (yr in years) {
# obtain specific year-workbook and its sheet names
wkb_name <- paste(yr, "Neighborhood Council Trip Matrix.xlsx")
sheet_names <- excel_sheets(wkb_name)
# read, clean, and append all the sheets from the specific workbook
for (one_month in sheet_names) {
one_sheet <- read_excel(wkb_name, sheet = one_month) %>%
rename("Origin NC" = "Origin\\Destination") %>%
mutate_at(vars(-c("Origin NC")), as.numeric) %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste(one_month,"1",yr)))
output <- bind_rows(output, one_sheet)
}
}
source("C:/Project/APP/APP/scripts/LADOT_working/OD_by_NCs_script.R", echo=TRUE)
output %>% filter(is.na(Trips))
output <- NULL
for (yr in years) {
# obtain specific year-workbook and its sheet names
wkb_name <- paste(yr, "Neighborhood Council Trip Matrix.xlsx")
sheet_names <- excel_sheets(wkb_name)
# read, clean, and append all the sheets from the specific workbook
for (one_month in sheet_names) {
one_sheet <- read_excel(wkb_name, sheet = one_month) %>%
rename("Origin NC" = "Origin\\Destination") %>%
mutate_at(vars(-c("Origin NC")), as.numeric) %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste(one_month,"1",yr)))
output <- bind_rows(output, one_sheet)
}
rm(one_sheet,yr,one_month,wkb_name,sheet_names)
}
output %>% filter(is.na(Trips))
