ccd_data %>% count(sch_type)
ccd_hs %>% count(sch_type)
ccd_data %>% count(updated_status)
ccd_hs %>% count(updated_status)
ccd_data %>% count(sch_type)
ccd_hs %>% count(sch_type)
ccd_hs1 %>% count(sch_type)
ccd_data %>% count(updated_status)
ccd_hs %>% count(updated_status)
ccd_hs1 %>% count(updated_status)
anti_ccd_hs_zip = ccd_hs %>%
anti_join(zip_data, by = c("lzip"="zip_code"))
anti_ccd_hs_zip %>% select(lzip) %>% filter(nchar(lzip)<5) %>% count()
ccd_hs = ccd_hs %>% mutate(lzip = str_pad(lzip, 5, side = "left", pad = "0"))
ccd_hs_zip = ccd_hs %>%
left_join(zip_data, by = c("lzip"="zip_code"))
anti_ccd_hs_zip = ccd_hs %>%
anti_join(zip_data, by = c("lzip"="zip_code"))
anti_ccd_hs_zip %>% count(lzip) %>% arrange(lzip)
anti_ccd_hs_zip %>% select(lzip) %>% filter(nchar(lzip)<5) %>% count()
# Note: some 5-digit zip codes did not get matched because they do not exist in  `zip_data`
zip_data %>% filter(zip_code %in% "06045")
ccd_hs = ccd_hs %>% mutate(lzip = str_pad(lzip, 5, pad = "0"))
ccd_hs_zip = ccd_hs %>%
left_join(zip_data, by = c("lzip"="zip_code"))
anti_ccd_hs_zip = ccd_hs %>%
anti_join(zip_data, by = c("lzip"="zip_code"))
# No more 4-digit zip codes
anti_ccd_hs_zip %>% select(lzip) %>% filter(nchar(lzip)<5) %>% count()
# Note: some 5-digit zip codes did not get matched because they do not exist in  `zip_data`
zip_data %>% filter(zip_code %in% "06045")
semi_ccd_hs_zip_events = ccd_hs_zip %>%
semi_join(events_rutgers, by = c("ncessch" = "school_id"))
events_rutgers = pubhs_events %>% filter(univ_id == 186380)
events_rutgers = pubhs_events %>% filter(univ_id == 186380)
ccd_hs_zip_events = ccd_hs_zip %>%
left_join(events_rutgers, by = c("ncessch" = "school_id"))
semi_ccd_hs_zip_events = ccd_hs_zip %>%
semi_join(events_rutgers, by = c("ncessch" = "school_id"))
anti_ccd_hs_zip_events = ccd_hs_zip %>%
anti_join(events_rutgers, by = c("ncessch" = "school_id"))
length(unique(semi_ccd_hs_zip_events$ncessch))
length(unique(anti_ccd_hs_zip_events$ncessch))
nrow(semi_ccd_hs_zip_events)
nrow(anti_ccd_hs_zip_events)
glimpse(ccd_hs_zip_events$num_events)
str(ccd_hs_zip_events$num_events)
class(ccd_hs_zip_events$num_events)
ccd_hs_zip_events = ccd_hs_zip_events %>%
mutate(num_visits = ifelse(is.na(as.integer(num_events)), 0, num_events))
ccd_hs_zip_events %>% count(num_visits)
class(ccd_hs_zip_events$num_events)
ccd_hs_zip_events = ccd_hs_zip_events %>%
mutate(got_visit = ifelse(num_visits > 0, 1, 0))
ccd_hs_zip_events %>% count(got_visit)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(collapse = TRUE, comment = "#>", highlight = TRUE)
library(tidyverse)
library(labelled)
load(url("https://github.com/anyone-can-cook/rclass1/raw/master/data/nls72/nls_crs.RData"))
nls_crs <- nls_crs %>%
arrange(id, transnum, termnum, crsename)
nls_crs <- nls_crs %>% select(id, transnum, termnum, crsecred, gradtype, crsgrada, crsgradb, crsecip, crsename, crsgrada_fac, numgrade, crsgradb_v2, crsecred_v2, numgrade_v2)
names(nls_crs)
str(nls_crs)
class(nls)
typeof(nls_crs$transnum)
nls_crs %>% select(transnum) %>% var_label()
nls_crs %>% count(transnum)
min(nls_crs$transnum)
max(nls_crs$transnum)
mean(nls_crs$transnum)
typeof(nls_crs$termnum)
nls_crs %>% select(termnum) %>% var_label()
nls_crs %>% count(termnum)
min(nls_crs$termnum)
max(nls_crs$termnum)
mean(nls_crs$termnum)
typeof(nls_crs$crsecred_v2)
nls_crs %>% select(crsecred_v2) %>% var_label()
nls_crs %>% count(crsecred_v2)
min(nls_crs$crsecred_v2)
max(nls_crs$crsecred_v2)
mean(nls_crs$crsecred_v2)
typeof(nls_crs$gradtype)
nls_crs %>% select(gradtype) %>% var_label()
nls_crs %>% count(gradtype)
min(nls_crs$gradtype)
max(nls_crs$gradtype)
mean(nls_crs$gradtype)
typeof(nls_crs$numgrade_v2)
nls_crs %>% select(numgrade_v2) %>% var_label()
nls_crs %>% count(numgrade_v2)
min(nls_crs$numgrade_v2)
max(nls_crs$numgrade_v2)
mean(nls_crs$numgrade_v2)
#Investigations
nls_crs %>% count(id)
nls_crs %>% count(crsecred_v2)
max(nls_crs$crsecred_v2)
min(nls_crs$crsecred_v2)
mean(nls_crs$crsecred_v2)
nls_crs %>% count(numgrade_v2)
max(nls_crs$numgrade_v2)
min(nls_crs$numgrade_v2)
mean(nls_crs$numgrade_v2)
#Create crsecred_v3
nls_crs <- nls_crs %>% mutate(crsecred_v3 = ifelse(is.na(numgrade_v2), NA, crsecred_v2))
table(nls_crs$crsecred_v3)
nls_crs %>% count(crsecred_v3)
max(nls_crs$crsecred_v3)
min(nls_crs$crsecred_v3)
mean(nls_crs$crsecred_v3)
#Investigation of numgrade_v2
nls_crs %>% count(numgrade_v2, gradtype == 9)
nls_crs %>% count(numgrade_v2, gradtype == 1)
max(nls_crs$crsecred_v3, nls_crs$gradtype == 9)
max(nls_crs$crsecred_v3, nls_crs$gradtype == 1)
min(nls_crs$crsecred_v3, nls_crs$gradtype == 9)
min(nls_crs$crsecred_v3, nls_crs$gradtype == 1)
#Create 'qualpts'
nls_crs <- nls_crs %>% mutate(qualpts=crsecred_v3*numgrade_v2)
nls_crs <- nls_crs %>% group_by(id, transnum) %>%
mutate(total_credits = sum(crsecred_v3, na.rm =TRUE), inst_qualpts=sum(qualpts, na.rm=TRUE))
nls_crs <- nls_crs %>% mutate(inst_gpa=(inst_qualpts/total_credits))
table(nls_crs$inst_gpa)
nls_crs %>% count(inst_gpa)
max(nls_crs$inst_gpa)
min(nls_crs$inst_gpa)
mean(nls_crs$inst_gpa)
nls_crs <- nls_crs %>% group_by(termnum) %>%
mutate(term_credits=sum(crsecred_v3, na.rm=TRUE),term_qualpts=sum(qualpts, na.rm=TRUE))
nls_crs <- nls_crs %>% mutate(term_gpa=(term_qualpts/term_credits))
nls_crs %>% count(term_gpa)
max(nls_crs$term_gpa)
min(nls_crs$term_gpa)
mean(nls_crs$term_gpa)
summary(nls_crs$inst_gpa)
View(nls_crs)
nls_crs %>% filter(id == 67, transnum == 1)
nls_crs %>% filter(id == 67, transnum == 1) %>% summarise(creds = sum(crsecred_v3, na.rm = T))
nls_crs %>% filter(id == 67, transnum == 1) %>% summarise(creds = sum(crsecred_v3, na.rm = T)) %>% sum(creds)
nls_crs %>% filter(id == 67, transnum == 1) %>% summarise(creds = sum(crsecred_v3, na.rm = T)) %>% ungroup()
nls_crs %>% filter(id == 67, transnum == 1) %>% summarise(creds = sum(crsecred_v3, na.rm = T)) %>% ungroup() %>% sum(creds)
nls_crs %>% filter(id == 67, transnum == 1) %>% summarise(creds = sum(crsecred_v3, na.rm = T)) %>% ungroup() %>% sum()
1.7*7+2
nls_crs <- nls_crs %>% group_by(id, transnum) %>%
summarise_at(vars(qualpts, crsecred_v3), .funs = list(sum = ~sum(., na.rm = TRUE))) %>%
mutate(total_credits = sum(crsecred_v3, na.rm =TRUE), inst_qualpts=sum(qualpts, na.rm=TRUE))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(collapse = TRUE, comment = "#>", highlight = TRUE)
library(tidyverse)
library(labelled)
load(url("https://github.com/anyone-can-cook/rclass1/raw/master/data/nls72/nls_crs.RData"))
nls_crs <- nls_crs %>%
arrange(id, transnum, termnum, crsename)
nls_crs <- nls_crs %>% select(id, transnum, termnum, crsecred, gradtype, crsgrada, crsgradb, crsecip, crsename, crsgrada_fac, numgrade, crsgradb_v2, crsecred_v2, numgrade_v2)
names(nls_crs)
str(nls_crs)
class(nls)
typeof(nls_crs$transnum)
nls_crs %>% select(transnum) %>% var_label()
nls_crs %>% count(transnum)
min(nls_crs$transnum)
max(nls_crs$transnum)
mean(nls_crs$transnum)
typeof(nls_crs$termnum)
nls_crs %>% select(termnum) %>% var_label()
nls_crs %>% count(termnum)
min(nls_crs$termnum)
max(nls_crs$termnum)
mean(nls_crs$termnum)
typeof(nls_crs$crsecred_v2)
nls_crs %>% select(crsecred_v2) %>% var_label()
nls_crs %>% count(crsecred_v2)
min(nls_crs$crsecred_v2)
max(nls_crs$crsecred_v2)
mean(nls_crs$crsecred_v2)
typeof(nls_crs$gradtype)
nls_crs %>% select(gradtype) %>% var_label()
nls_crs %>% count(gradtype)
min(nls_crs$gradtype)
max(nls_crs$gradtype)
mean(nls_crs$gradtype)
typeof(nls_crs$numgrade_v2)
nls_crs %>% select(numgrade_v2) %>% var_label()
nls_crs %>% count(numgrade_v2)
min(nls_crs$numgrade_v2)
max(nls_crs$numgrade_v2)
mean(nls_crs$numgrade_v2)
#Investigations
nls_crs %>% count(id)
nls_crs %>% count(crsecred_v2)
max(nls_crs$crsecred_v2)
min(nls_crs$crsecred_v2)
mean(nls_crs$crsecred_v2)
nls_crs %>% count(numgrade_v2)
max(nls_crs$numgrade_v2)
min(nls_crs$numgrade_v2)
mean(nls_crs$numgrade_v2)
#Create crsecred_v3
nls_crs <- nls_crs %>% mutate(crsecred_v3 = ifelse(is.na(numgrade_v2), NA, crsecred_v2))
table(nls_crs$crsecred_v3)
nls_crs %>% count(crsecred_v3)
max(nls_crs$crsecred_v3)
min(nls_crs$crsecred_v3)
mean(nls_crs$crsecred_v3)
#Investigation of numgrade_v2
nls_crs %>% count(numgrade_v2, gradtype == 9)
nls_crs %>% count(numgrade_v2, gradtype == 1)
max(nls_crs$crsecred_v3, nls_crs$gradtype == 9)
max(nls_crs$crsecred_v3, nls_crs$gradtype == 1)
min(nls_crs$crsecred_v3, nls_crs$gradtype == 9)
min(nls_crs$crsecred_v3, nls_crs$gradtype == 1)
#Create 'qualpts'
nls_crs <- nls_crs %>% mutate(qualpts=crsecred_v3*numgrade_v2)
nls_crs <- nls_crs %>% group_by(id, transnum) %>%
summarise_at(vars(qualpts, crsecred_v3), .funs = list(sum = ~sum(., na.rm = TRUE))) %>%
mutate(total_credits = sum(crsecred_v3, na.rm =TRUE), inst_qualpts=sum(qualpts, na.rm=TRUE))
names(nls_crs)
nls_crs <- nls_crs %>% group_by(id, transnum) %>%
summarise_at(vars(qualpts, crsecred_v3), .funs = list(sum = ~sum(., na.rm = TRUE)))
nls_crs <- nls_crs %>% mutate(inst_gpa=(inst_qualpts/total_credits))
nls_crs <- nls_crs %>% group_by(id, transnum) %>%
summarise_at(vars(qualpts, crsecred_v3), .funs = list(sum = ~sum(., na.rm = TRUE)))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(collapse = TRUE, comment = "#>", highlight = TRUE)
library(tidyverse)
library(labelled)
load(url("https://github.com/anyone-can-cook/rclass1/raw/master/data/nls72/nls_crs.RData"))
nls_crs <- nls_crs %>%
arrange(id, transnum, termnum, crsename)
nls_crs <- nls_crs %>% select(id, transnum, termnum, crsecred, gradtype, crsgrada, crsgradb, crsecip, crsename, crsgrada_fac, numgrade, crsgradb_v2, crsecred_v2, numgrade_v2)
names(nls_crs)
str(nls_crs)
class(nls)
typeof(nls_crs$transnum)
nls_crs %>% select(transnum) %>% var_label()
nls_crs %>% count(transnum)
min(nls_crs$transnum)
max(nls_crs$transnum)
mean(nls_crs$transnum)
typeof(nls_crs$termnum)
nls_crs %>% select(termnum) %>% var_label()
nls_crs %>% count(termnum)
min(nls_crs$termnum)
max(nls_crs$termnum)
mean(nls_crs$termnum)
typeof(nls_crs$crsecred_v2)
nls_crs %>% select(crsecred_v2) %>% var_label()
nls_crs %>% count(crsecred_v2)
min(nls_crs$crsecred_v2)
max(nls_crs$crsecred_v2)
mean(nls_crs$crsecred_v2)
typeof(nls_crs$gradtype)
nls_crs %>% select(gradtype) %>% var_label()
nls_crs %>% count(gradtype)
min(nls_crs$gradtype)
max(nls_crs$gradtype)
mean(nls_crs$gradtype)
typeof(nls_crs$numgrade_v2)
nls_crs %>% select(numgrade_v2) %>% var_label()
nls_crs %>% count(numgrade_v2)
min(nls_crs$numgrade_v2)
max(nls_crs$numgrade_v2)
mean(nls_crs$numgrade_v2)
#Investigations
nls_crs %>% count(id)
nls_crs %>% count(crsecred_v2)
max(nls_crs$crsecred_v2)
min(nls_crs$crsecred_v2)
mean(nls_crs$crsecred_v2)
nls_crs %>% count(numgrade_v2)
max(nls_crs$numgrade_v2)
min(nls_crs$numgrade_v2)
mean(nls_crs$numgrade_v2)
#Create crsecred_v3
nls_crs <- nls_crs %>% mutate(crsecred_v3 = ifelse(is.na(numgrade_v2), NA, crsecred_v2))
table(nls_crs$crsecred_v3)
nls_crs %>% count(crsecred_v3)
max(nls_crs$crsecred_v3)
min(nls_crs$crsecred_v3)
mean(nls_crs$crsecred_v3)
#Investigation of numgrade_v2
nls_crs %>% count(numgrade_v2, gradtype == 9)
nls_crs %>% count(numgrade_v2, gradtype == 1)
max(nls_crs$crsecred_v3, nls_crs$gradtype == 9)
max(nls_crs$crsecred_v3, nls_crs$gradtype == 1)
min(nls_crs$crsecred_v3, nls_crs$gradtype == 9)
min(nls_crs$crsecred_v3, nls_crs$gradtype == 1)
#Create 'qualpts'
nls_crs <- nls_crs %>% mutate(qualpts=crsecred_v3*numgrade_v2)
nls_crs <- nls_crs %>% group_by(id, transnum) %>%
summarise_at(vars(qualpts, crsecred_v3), .funs = list(sum = ~sum(., na.rm = TRUE)))
nls_crs <- nls_crs %>% mutate(inst_gpa=(qualpts_sum/crsecred_v3_sum))
table(nls_crs$inst_gpa)
nls_crs %>% count(inst_gpa)
max(nls_crs$inst_gpa)
min(nls_crs$inst_gpa)
mean(nls_crs$inst_gpa)
nls_crs %>% count(inst_gpa)
max(nls_crs$inst_gpa, na.rm = TRUE)
min(nls_crs$inst_gpa, na.rm = TRUE)
mean(nls_crs$inst_gpa, na.rm = TRUE)
summary(nls_crs$inst_gpa)
nls_crs <- nls_crs %>% group_by(id, transnum, termnum) %>%
summarise_at(vars(qualpts, crsecred_v3), .funs = list(sum = ~sum(., na.rm = TRUE))) %>%
mutate(gpa = round(qualpts_sum/crsecred_v3_sum, 2))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(collapse = TRUE, comment = "#>", highlight = TRUE)
library(tidyverse)
library(labelled)
load(url("https://github.com/anyone-can-cook/rclass1/raw/master/data/nls72/nls_crs.RData"))
nls_crs <- nls_crs %>%
arrange(id, transnum, termnum, crsename)
nls_crs <- nls_crs %>% select(id, transnum, termnum, crsecred, gradtype, crsgrada, crsgradb, crsecip, crsename, crsgrada_fac, numgrade, crsgradb_v2, crsecred_v2, numgrade_v2)
names(nls_crs)
str(nls_crs)
class(nls)
typeof(nls_crs$transnum)
nls_crs %>% select(transnum) %>% var_label()
nls_crs %>% count(transnum)
min(nls_crs$transnum)
max(nls_crs$transnum)
mean(nls_crs$transnum)
typeof(nls_crs$termnum)
nls_crs %>% select(termnum) %>% var_label()
nls_crs %>% count(termnum)
min(nls_crs$termnum)
max(nls_crs$termnum)
mean(nls_crs$termnum)
typeof(nls_crs$crsecred_v2)
nls_crs %>% select(crsecred_v2) %>% var_label()
nls_crs %>% count(crsecred_v2)
min(nls_crs$crsecred_v2)
max(nls_crs$crsecred_v2)
mean(nls_crs$crsecred_v2)
typeof(nls_crs$gradtype)
nls_crs %>% select(gradtype) %>% var_label()
nls_crs %>% count(gradtype)
min(nls_crs$gradtype)
max(nls_crs$gradtype)
mean(nls_crs$gradtype)
typeof(nls_crs$numgrade_v2)
nls_crs %>% select(numgrade_v2) %>% var_label()
nls_crs %>% count(numgrade_v2)
min(nls_crs$numgrade_v2)
max(nls_crs$numgrade_v2)
mean(nls_crs$numgrade_v2)
#Investigations
nls_crs %>% count(id)
nls_crs %>% count(crsecred_v2)
max(nls_crs$crsecred_v2)
min(nls_crs$crsecred_v2)
mean(nls_crs$crsecred_v2)
nls_crs %>% count(numgrade_v2)
max(nls_crs$numgrade_v2)
min(nls_crs$numgrade_v2)
mean(nls_crs$numgrade_v2)
#Create crsecred_v3
nls_crs <- nls_crs %>% mutate(crsecred_v3 = ifelse(is.na(numgrade_v2), NA, crsecred_v2))
table(nls_crs$crsecred_v3)
nls_crs %>% count(crsecred_v3)
max(nls_crs$crsecred_v3)
min(nls_crs$crsecred_v3)
mean(nls_crs$crsecred_v3)
#Investigation of numgrade_v2
nls_crs %>% count(numgrade_v2, gradtype == 9)
nls_crs %>% count(numgrade_v2, gradtype == 1)
max(nls_crs$crsecred_v3, nls_crs$gradtype == 9)
max(nls_crs$crsecred_v3, nls_crs$gradtype == 1)
min(nls_crs$crsecred_v3, nls_crs$gradtype == 9)
min(nls_crs$crsecred_v3, nls_crs$gradtype == 1)
#Create 'qualpts'
nls_crs <- nls_crs %>% mutate(qualpts=crsecred_v3*numgrade_v2)
nls_crs_1 <- nls_crs %>% group_by(id, transnum) %>%
summarise_at(vars(qualpts, crsecred_v3), .funs = list(sum = ~sum(., na.rm = TRUE)))
nls_crs_1 <- nls_crs_1 %>% mutate(inst_gpa=(qualpts_sum/crsecred_v3_sum))
nls_crs_1 %>% count(inst_gpa)
max(nls_crs_1$inst_gpa, na.rm = TRUE)
min(nls_crs_1$inst_gpa, na.rm = TRUE)
mean(nls_crs_1$inst_gpa, na.rm = TRUE)
summary(nls_crs_1$inst_gpa)
nls_crs_2 <- nls_crs %>% group_by(id, transnum, termnum) %>%
summarise_at(vars(qualpts, crsecred_v3), .funs = list(sum = ~sum(., na.rm = TRUE))) %>%
mutate(gpa = round(qualpts_sum/crsecred_v3_sum, 2))
nls_crs_2 <- nls_crs_2 %>% mutate(term_gpa=(term_qualpts/term_credits))
summary(nls_crs_2$term_gpa)
summary(nls_crs_2$term_gpa)
View(nls_crs_2)
nls_crs_2 <- nls_crs %>% group_by(id, transnum, termnum) %>%
summarise_at(vars(qualpts, crsecred_v3), .funs = list(sum = ~sum(., na.rm = TRUE))) %>%
mutate(gpa = round(qualpts_sum/crsecred_v3_sum, 2))
nls_crs_2 <- nls_crs_2 %>% mutate(term_gpa=(qualpts_sum/crsecred_v3_sum))
nls_crs_2 %>% count(term_gpa)
max(nls_crs_2$term_gpa, na.rm = TRUE)
min(nls_crs_2$term_gpa, na.rm = TRUE)
mean(nls_crs_2$term_gpa, na.rm = TRUE)
summary(nls_crs_2$term_gpa)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(collapse = TRUE, comment = "#>", highlight = TRUE)
library(tidyverse)
library(haven)
library(labelled)
# Read Stata data into R using read_data() function from haven package
age_f16_allvars_allobs <- read_dta(file="https://github.com/anyone-can-cook/rclass1/raw/master/data/ipeds/ef/age/ef_age_ic_fall_2016.dta", encoding=NULL)
# Rename a couple variables
age_f16_allvars_allobs <- age_f16_allvars_allobs %>% rename(agegroup=efbage, levstudy=lstudy)
# List variables and variable labels
names(age_f16_allvars_allobs)
age_f16_allvars_allobs %>% var_label()
# Create dataframe that keeps observations where age-group equals `1` (1. All age categories total)
agegroup1_obs <- age_f16_allvars_allobs %>%
select(fullname,unitid,agegroup,levstudy,efage09,stabbr,locale,sector) %>% # subset the dataframe and only keep certain columns
filter(agegroup==1) %>% # filter for obs where age-group == 1
select(-agegroup)
glimpse(agegroup1_obs)
names(agegroup1_obs)
var_label(agegroup1_obs)
agegroup1_obs
unitid_levstudy <- agegroup1_obs %>% group_by(unitid) %>% count(levstudy)
table(unitid_levstudy$n)
unitid_obs <- agegroup1_obs %>% count(unitid)
table(unitid_obs$n)
agegroup1_obs_tidy <- agegroup1_obs %>%
pivot_wider(
names_from = levstudy,
values_from = efage09
)
agegroup1_obs_tidy %>% count(unitid)
agegroup1_obs_tidy_v2 <- agegroup1_obs %>% mutate(level=as.character(levstudy)) %>% select(-c(levstudy)) %>% pivot_wider(names_from = level, values_from = efage09)
head(agegroup1_obs_tidy_v2, n=10)
head(agegroup1_obs_tidy, n=10)
load(url("https://github.com/anyone-can-cook/rclass1/raw/master/data/nces_digest/nces_digest_table_208_30.RData"))
# Convert character variables for teacher totals to integers
table208_30[2:6] <- data.frame(lapply(table208_30[2:6], as.integer))
table208_30
table208_30_tidy <- table208_30 %>% pivot_longer(cols = starts_with("tot_fall_"), names_to = "year", values_to = "numteachers", names_prefix = "tot_fall_") %>% pivot_wider(names_from = state, values_from = numteachers)
head(agegroup1_obs_tidy)
agegroup1_obs_tidy_v2 = agegroup1_obs %>%
mutate(level = recode(as.integer(levstudy), `1` = "all", `2` = "ug", `5` = "grad")) %>%
select(-levstudy) %>%
pivot_wider(names_from = level, values_from = efage09)
head(agegroup1_obs_tidy_v2, n=10)
head(agegroup1_obs_tidy, n=10)
head(table208_30_tidy)
table208_30_tidy <- table208_30 %>% pivot_longer(cols = starts_with("tot_fall_"), names_to = "year", values_to = "numteachers", names_prefix = "tot_fall_")
head(table208_30_tidy)
library(tidyverse)
letters
my_ls1 = LETTERS[1:3]
my_ls2 = LETTERS[4:6]
my_df = data.frame(col1 = LETTERS[1:3],
col2 = LETTERS[4:6])
my_df
print(i)
for (i in my_df$col1) {
print(i)
}
for (i in my_df$col1) {
print(i)
for (j in my_df$col2) {
print(i+j)
}
}
for (i in my_df$col1) {
print(i)
for (j in my_df$col2) {
print(paste(i,j))
}
}
for (i in my_df$col1) {
for (j in my_df$col2) {
my_df2 = data.frame(col1 = i,
col2 = j)
}
}
my_df2
my_outpt = NULL
for (i in my_df$col1) {
for (j in my_df$col2) {
my_df2 = data.frame(col1 = i,
col2 = j)
my_outpt = my_outpt %>% bind_rows(my_df2)
}
}
my_outpt
getwd()
setwd("C:/Project/APP/APP/data/geos")
library(sf)
library(sp)
install.packages(c("sp","sf", "rgdal"))
library(sf)
read_sf("Census_Tracts_2020/Census_Tracts_2020.shp")
read_sf("Neighborhood Councils (Certified)/geo_export_71f6a568-febe-403c-898f-4ce9286a58a2.shp")
lanc_geos = read_sf("Neighborhood Councils (Certified)/geo_export_71f6a568-febe-403c-898f-4ce9286a58a2.shp")
View(lanc_geos)
source("C:/Project/APP/APP/scripts/LADOT_working/OD_by_NCs_script.R", echo=TRUE)
names(output)
# No. of NCs per month
output %>% group_by(Month) %>% summarise(n_NCs = n())
# No. of NCs per month
output %>% group_by(Month) %>% summarise(n_NCs = n(unique(`Origin NC`)))
# No. of NCs per month
output %>% group_by(Month) %>% summarise(n_NCs = length(unique(`Origin NC`)))
# No. of NCs per month
save = output %>% group_by(Month) %>% summarise(n_NCs = length(unique(`Origin NC`)))
View(save)
View(lanc_geos)
source("C:/Project/APP/APP/scripts/LADOT_working/OD_by_NCs_script.R", echo=TRUE)
source("C:/Project/APP/APP/scripts/LADOT_working/OD_by_NCs_script.R", echo=TRUE)
source("C:/Project/APP/APP/scripts/LADOT_working/OD_by_NCs_script.R", echo=TRUE)
