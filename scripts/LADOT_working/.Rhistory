path_name
# Cleaning ########
years <- c("2019","2020","2021","2022") # the four years of the different workbooks
my_output <- NULL
for (yr in years) {
# obtain specific year-workbook and its sheet names
path_name <- paste("../../data/LADOT/CPRA #22-10589 Data/", yr, " Neighborhood Council Trip Matrix.xlsx", sep = "")
sheet_names <- excel_sheets(path_name)
# read, clean, and append all the sheets from the specific workbook
for (one_month in sheet_names) {
one_sheet <- read_excel(wkb_name, sheet = one_month) %>%
rename("Origin NC" = "Origin\\Destination") %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste(one_month,"1",yr)))
my_output <- bind_rows(output, one_sheet)
}
rm(one_sheet,yr,one_month,path_name,sheet_names)
}
# Cleaning ########
years <- c("2019","2020","2021","2022") # the four years of the different workbooks
my_output <- NULL
for (yr in years) {
# obtain specific year-workbook and its sheet names
path_name <- paste("../../data/LADOT/CPRA #22-10589 Data/", yr, " Neighborhood Council Trip Matrix.xlsx", sep = "")
sheet_names <- excel_sheets(path_name)
# read, clean, and append all the sheets from the specific workbook
for (one_month in sheet_names) {
one_sheet <- read_excel(wkb_name, sheet = one_month) %>%
rename("Origin NC" = "Origin\\Destination") %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste(one_month,"1",yr)))
my_output <- bind_rows(output, one_sheet)
}
rm(one_sheet,yr,one_month,path_name,sheet_names)
}
for (yr in years) {
# obtain specific year-workbook and its sheet names
path_name <- paste("../../data/LADOT/CPRA #22-10589 Data/", yr, " Neighborhood Council Trip Matrix.xlsx", sep = "")
sheet_names <- excel_sheets(path_name)
# read, clean, and append all the sheets from the specific workbook
for (one_month in sheet_names) {
one_sheet <- read_excel(path_name, sheet = one_month) %>%
rename("Origin NC" = "Origin\\Destination") %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste(one_month,"1",yr)))
my_output <- bind_rows(output, one_sheet)
}
rm(one_sheet,yr,one_month,path_name,sheet_names)
}
# Cleaning ########
years <- c("2019","2020","2021","2022") # the four years of the different workbooks
my_output <- NULL
for (yr in years) {
# obtain specific year-workbook and its sheet names
path_name <- paste("../../data/LADOT/CPRA #22-10589 Data/", yr, " Neighborhood Council Trip Matrix.xlsx", sep = "")
sheet_names <- excel_sheets(path_name)
# read, clean, and append all the sheets from the specific workbook
for (one_month in sheet_names) {
one_sheet <- read_excel(path_name, sheet = one_month) %>%
rename("Origin NC" = "Origin\\Destination") %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = mdy(paste(one_month,"1",yr)))
my_output <- bind_rows(my_output, one_sheet)
}
rm(one_sheet,yr,one_month,path_name,sheet_names)
}
View(my_output)
# Add Geos ########
library(sf)
nc_geos = read_sf("../../data/geos/Neighborhood Councils (Certified)/geo_export_71f6a568-febe-403c-898f-4ce9286a58a2.shp")
View(nc_geos)
library(jsonlite)
lanc_geos = fromJSON(txt = "https://maps.lacity.org/lahub/rest/services/Boundaries/MapServer/18/query?outFields=*&where=1%3D1&f=geojson")
View(lanc_geos)
lanc_df = lanc_geos$features$properties
View(lanc_df)
lanc_df$NAME %in% nc_geos$name
arrange(lanc_df, NAME)
lanc_df %>% select(NAME) %>% arrange(NAME) %>%
mutate(check = NAME %in% nc_geos %>% select(name) %>% arrange(name))
lanc_df %>% select(NAME) %>% arrange(NAME) %>%
mutate(check = NAME %in% (nc_geos %>% select(name) %>% arrange(name)))
nchar(nc_geos$name)
nchar(lanc_df$NAME)
nc_geos %>% select(name) %>% arrange(name)
lanc_df %>% select(NAME) %>% arrange(NAME)
lanc_df$NC_ID %in% nc_geos$nc_id
lanc_df$NC_ID
nc_geos$nc_id
sort(nc_geos$nc_id)
sort(lanc_df$NC_ID)
sort(lanc_df$NC_ID) %in% sort(nc_geos$nc_id)
library(geojsonio)
spdf <- geojson_read("https://maps.lacity.org/lahub/rest/services/Boundaries/MapServer/18/query?outFields=*&where=1%3D1&f=geojson",  what = "sp")
spdf <- geojson_read("https://maps.lacity.org/lahub/rest/services/Boundaries/MapServer/18/query?outFields=*&where=1%3D1&f=geojson")
spdf <- read_sf("https://maps.lacity.org/lahub/rest/services/Boundaries/MapServer/18/query?outFields=*&where=1%3D1&f=geojson")
View(spdf)
getwd()
st_write(spdf, "is_this_.geojson")
packages <- c("tidyverse", "readxl", "lubridate", "sf")
lapply(packages, library, character.only = TRUE)
rm(packages)
# Add Geos ########
nc_geos = sf::st_read("APP/APP/data/geos/Neighborhood_Councils_(Certified)/Neighborhood_Councils_(Certified).shp")
source("C:/Project/APP/APP/scripts/LADOT_working/OD_by_NCs_script.R", echo=TRUE)
packages <- c("tidyverse", "readxl", "lubridate", "sf")
lapply(packages, library, character.only = TRUE)
rm(packages)
nc_geos = sf::st_read("https://github.com/kaye2929/APP/blob/main/data/geos/Neighborhood_Councils_(Certified)/Neighborhood_Councils_(Certified).shp")
nc_geos = sf::read_sf("https://github.com/kaye2929/APP/blob/main/data/geos/Neighborhood_Councils_(Certified)/Neighborhood_Councils_(Certified).shp")
nc_geos = sf::st_read("https://github.com/kaye2929/APP/tree/main/data/geos/Neighborhood_Councils_(Certified)")
nc_geos = sf::st_read(url("https://github.com/kaye2929/APP/blob/main/data/geos/Neighborhood_Councils_(Certified)/Neighborhood_Councils_(Certified).shp"))
nc_geos = sf::st_read(load(url("https://github.com/kaye2929/APP/blob/main/data/geos/Neighborhood_Councils_(Certified)/Neighborhood_Councils_(Certified).shp")))
# Add Geos ########
nc_geos = sf::st_read("../../data/geos/Neighborhood_Councils_(Certified)/Neighborhood_Councils_(Certified).shp")
nc_geos_old = sf::st_read("../../data/geos/OLD DO NOT USE Neighborhood Councils (Certified)/geo_export_71f6a568-febe-403c-898f-4ce9286a58a2.shp")
# develop ID reference between NCs
temp = data.frame(
output_nc_name = sort(unique(my_output$`Origin NC`)),
old_nc_name = sort(unique(nc_geos_old$name)))
# Cleaning ########
years <- c("2019","2020","2021","2022") # the four years of the different workbooks
my_output <- NULL
for (yr in years) {
# create path to the workbook with a specific year
path_name <- paste("../../data/LADOT/CPRA #22-10589 Data/", yr, " Neighborhood Council Trip Matrix.xlsx", sep = "")
# obtain all the sheet names within the specific workbook
sheet_names <- readxl::excel_sheets(path_name)
# read, clean, and append all the sheets from the specific workbook
for (one_month in sheet_names) {
one_sheet <- readxl::read_excel(path_name, sheet = one_month) %>%
rename("Origin NC" = "Origin\\Destination") %>%
pivot_longer(cols = -c("Origin NC"), names_to = "Destination NC", values_to = "Trips") %>%
mutate(Month = lubridate::mdy(paste(one_month,"1",yr)))
my_output <- bind_rows(my_output, one_sheet)
}
rm(one_sheet,yr,one_month,path_name,sheet_names)
}
# develop ID reference between NCs
temp = data.frame(
output_nc_name = sort(unique(my_output$`Origin NC`)),
old_nc_name = sort(unique(nc_geos_old$name)))
# check. nearly all have the same name. only the one NC has a differnet name, but it is very close.
temp$output_nc_name %in% temp$old_nc_name
# add `nc_id` to the reference table
nc_geo_ref = temp %>%
left_join(nc_geos_old, by = c("old_nc_name" = "name"))
View(nc_geo_ref)
names(nc_geo_ref)
View(temp)
View(nc_geos_old)
View(nc_geos)
temp1 = nc_geos_old %>%
left_join(nc_geos, by = c("nc_id" = "NC_ID"))
class(nc_geos)
class(nc_geos_old)
?st_join()
p1 = st_point(0:1)
p2 = st_point(2:1)
p = st_sf(a = letters[1:8], geom = st_sfc(p1, p1, p2, p1, p1, p2, p2, p1))
st_equals(p)
View(p)
class(nc_geo_ref)
View(nc_geo_ref)
temp1 = data.frame(nc_geos_old) %>%
left_join(data.frame(nc_geos), by = c("nc_id" = "NC_ID"))
View(temp1)
rm(temp1)
temp1 = data.frame(nc_geos_old) %>%
left_join(data.frame(nc_geos), by = c("nc_id" = "NC_ID"))
names(temp1)
?left_join.sf
temp1 = (nc_geos_old) %>%
left_join.sf((nc_geos), by = c("nc_id" = "NC_ID"))
?left_join
temp1 = data.frame(nc_geos_old) %>%
left_join(data.frame(nc_geos), by = c("nc_id" = "NC_ID")) %>%
rename(old_nc_name = name,
new_nc_name = NAME,
old_nc_geos = geometry.x,
new_nc_geos = geometry.y)
names(temp1)
View(temp1)
View(nc_geos)
rm(p)
rm(p1, p2)
View(temp1)
# check.
temp1$new_nc_name %in% temp1$old_nc_name
# check.
temp1$service_re %in% temp1$SERVICE_RE
temp1 %>%
count(service_re)
temp1 %>%
count(SERVICE_RE)
View(temp)
View(nc_geos)
# combine all the reference tables into one. add `nc_id` to the reference table
nc_geo_ref = temp %>%
left_join(temp1, by = c("old_nc_name" = "old_nc_name")) %>%
select(output_nc_name, old_nc_name, new_nc_name, nc_id) %>%
left_join(nc_geos, by = c("nc_id" = "NC_ID"))
View(nc_geo_ref)
names(nc_geo_ref)
View(my_output)
# combine all the reference tables into one. add `nc_id` to the reference table
nc_geo_ref = temp %>%
left_join(temp1, by = c("old_nc_name" = "old_nc_name")) %>%
select(output_nc_name, old_nc_name, new_nc_name, nc_id) %>%
left_join(nc_geos, by = c("nc_id" = "NC_ID")) %>%
select(OBJECTID, output_nc_name, old_nc_name, new_nc_name, nc_id, WADDESS:geometry)
# combine all the reference tables into one. add `nc_id` to the reference table
nc_geo_ref = temp %>%
left_join(temp1, by = c("old_nc_name" = "old_nc_name")) %>%
select(output_nc_name, old_nc_name, new_nc_name, nc_id) %>%
left_join(nc_geos, by = c("nc_id" = "NC_ID")) %>%
select(OBJECTID, output_nc_name, old_nc_name, new_nc_name, nc_id, WADDRESS:geometry)
View(nc_geo_ref)
# check. nearly all have the same name. only the one NC has a different name, but it is very close.
temp$output_nc_name %in% temp$old_nc_name
View(temp)
source("C:/Project/APP/APP/scripts/LADOT_working/OD_by_NCs_script.R", echo=TRUE)
source("C:/Project/APP/APP/scripts/LADOT_working/OD_by_NCs_script.R", echo=TRUE)
getwd()
nc_geo_ref %>%
select(-geometry) %>% class()
## Export reference table for future use.
st_write(nc_geo_ref, "../../data/geos/NC_OldtoNew_Ref.geojson")
nc_geo_ref %>%
select(-geometry) %>%
write.csv("../../data/geos/NC_OldtoNew_Ref.csv")
?write.csv
nc_geo_ref %>%
select(-geometry) %>%
write.csv(file = "../../data/geos/NC_OldtoNew_Ref.csv", row.names = FALSE)
source("C:/Project/APP/APP/scripts/LADOT_working/OD_by_NCs_script.R", echo=TRUE)
View(my_output)
?st_read
# Join Geos #######
nc_geos = sf::st_read("https://github.com/kaye2929/APP/blob/main/data/geos/NC_OldtoNew_Ref.geojson")
url("https://github.com/kaye2929/APP/blob/main/data/geos/NC_OldtoNew_Ref.geojson")
# Join Geos #######
library(geojsonio)
nc_geos = geojsonio::geojson_read("https://github.com/kaye2929/APP/blob/main/data/geos/NC_OldtoNew_Ref.geojson", what = "sp")
nc_geos = geojsonio::geojson_read("https://github.com/kaye2929/APP/blob/bd5a74a6a989e79d476d947546e09f54f314624c/data/geos/NC_OldtoNew_Ref.geojson", what = "sp")
nc_geos = st_read("../../data/geos/NC_OldtoNew_Ref.geojson")
View(nc_geos)
View(nc_geos)
nc_geos_full = NULL
for (i in nc_geos$nc_id) {
for (j in nc_geos$nc_id) {
nc_geos_full = data.frame(origin_nc_id = i,
dest_nc_id = j) %>%
bind_rows(nc_geos_full)
}
}
nc_geos_full %>% count(origin_nc_id)
nc_geos_full %>% count(origin_nc_id) %>% count(n)
nc_geos_full %>% count(dest_nc_id) %>% count(n)
99^2
View(nc_geos_full)
View(nc_geos)
names(nc_geos)
?rename_at
## create df with all OD pairs of NCs
nc_geos_full = NULL
for (i in nc_geos$nc_id) {
for (j in nc_geos$nc_id) {
nc_geos_full = data.frame(
origin_nc_id = i,
dest_nc_id = j) %>%
left_join(nc_geos %>%
select(output_nc_name, new_nc_name, geometry),
by = c("origin_nc_id" = "nc_id")) %>%
rename_at(.vars = c("output_nc_name", "new_nc_name", "geometry"),
.funs = function(x) {paste("origin_",x,sep = "")}) %>%
bind_rows(nc_geos_full)
}
}
View(nc_geos)
for (i in nc_geos$nc_id) {
for (j in nc_geos$nc_id) {
nc_geos_full = data.frame(
origin_nc_id = i,
dest_nc_id = j) %>%
left_join(nc_geos %>%
select(output_nc_name, new_nc_name, geometry, nc_id),
by = c("origin_nc_id" = "nc_id")) %>%
rename_at(.vars = c("output_nc_name", "new_nc_name", "geometry"),
.funs = function(x) {paste("origin_",x,sep = "")}) %>%
bind_rows(nc_geos_full)
}
}
View(nc_geos_full)
unique(nc_geos_full$origin_output_nc_name)
View(nc_geos)
unique(nc_geos_full$origin_new_nc_name)
View(nc_geos_full)
View(nc_geos_full)
## create df with all OD pairs of NCs
nc_geos_full = NULL
for (i in nc_geos$nc_id) {
for (j in nc_geos$nc_id) {
nc_geos_full = data.frame(
origin_nc_id = i,
dest_nc_id = j) %>%
left_join(nc_geos %>%
select(output_nc_name, new_nc_name, geometry, nc_id),
by = c("origin_nc_id" = "nc_id")) %>%
rename_at(.vars = c("output_nc_name", "new_nc_name", "geometry"),
.funs = function(x) {paste("origin_",x,sep = "")}) %>%
left_join(nc_geos %>%
select(output_nc_name, new_nc_name, geometry, nc_id),
by = c("dest_nc_id" = "nc_id")) %>%
rename_at(.vars = c("output_nc_name", "new_nc_name", "geometry"),
.funs = function(x) {paste("dest_",x,sep = "")}) %>%
bind_rows(nc_geos_full)
}
}
View(nc_geos_full)
View(nc_geos)
i in nc_geos$nc_id
nc_geos$nc_id
View(nc_geos_full)
## check that the output_nc_names has all the exact names given in the spreadsheet
unique(nc_geos_full$origin_output_nc_name) %in% unique(my_output$origin_nc)
## check that the output_nc_names has all the exact names given in the spreadsheet
unique(nc_geos_full$origin_output_nc_name) %in% unique(my_output$dest_na)
names(nc_geos_full)
names(my_output)
?left_join
intersect(names(nc_geos),names(my_output))
intersect(names(nc_geos),names(nc_geos_full))
intersect(names(my_output),names(nc_geos_full))
intersect(c("HI","it","me"),c("HI","you"))
source("C:/Project/APP/APP/data/geos/Create_NCgeo_Reference.R", echo=TRUE)
packages <- c("tidyverse", "readxl", "lubridate", "sf")
lapply(packages, library, character.only = TRUE)
rm(packages)
# Prep Geos #######
## read NC geos
nc_geos = st_read("../../data/geos/NC_OldtoNew_Ref.geojson")
## create df with all OD pairs of NCs using `nc_id`
nc_geos_full = NULL
for (i in nc_geos$nc_id) {
for (j in nc_geos$nc_id) {
nc_geos_full = data.frame(
origin_nc_id = i,
dest_nc_id = j) %>%
bind_rows(nc_geos_full)
}
}
## join the variables from the reference file to the OD pairs
nc_geos_full = nc_geos_full %>%
## join NC names for origin NCs
left_join(nc_geos %>%
select(data_nc_name, new_nc_name, geometry, nc_id),
by = c("origin_nc_id" = "nc_id")) %>%
rename_at(vars(data_nc_name, new_nc_name, geometry),
function(x) {paste("origin_",x,sep = "")}) %>%
## join NC names for dest NCs
left_join(nc_geos %>%
select(data_nc_name, new_nc_name, geometry, nc_id),
by = c("dest_nc_id" = "nc_id")) %>%
rename_at(vars(data_nc_name, new_nc_name, geometry),
function(x) {paste("dest_",x,sep = "")})
# Cleaning ########
years <- c("2019","2020","2021","2022") # the four years of the different workbooks
data_output <- NULL
# Scratch ########
temp_output <- readxl::read_excel("../../data/LADOT/CPRA #22-10589 Data/2019 Neighborhood Council Trip Matrix.xlsx", sheet = "Jan") %>%
rename("origin_nc" = "Origin\\Destination") %>%
pivot_longer(cols = -c("origin_nc"), names_to = "dest_nc", values_to = "trips")
# might be faster to make it a different table here
data_output = temp_output %>%
# right join. data -- full geos. fill in with 0
right_join(nc_geos_full, by = c("origin_nc" = "origin_data_nc_name")) %>%
mutate_at(vars(trips), function(x) {ifelse(is.na(x),0,x)}) %>%
# add month for each observation based on the sheet it came from
mutate(month = lubridate::mdy(paste(one_month,"1",yr))) %>%
bind_rows(data_output)
# might be faster to make it a different table here
data_output = temp_output %>%
# right join. data -- full geos. fill in with 0
right_join(nc_geos_full, by = c("origin_nc" = "origin_data_nc_name")) %>%
mutate_at(vars(trips), function(x) {ifelse(is.na(x),0,x)}) %>%
# add month for each observation based on the sheet it came from
mutate(month = lubridate::mdy(paste("Jan","1",yr))) %>%
bind_rows(data_output)
# might be faster to make it a different table here
data_output = temp_output %>%
# right join. data -- full geos. fill in with 0
right_join(nc_geos_full, by = c("origin_nc" = "origin_data_nc_name")) %>%
mutate_at(vars(trips), function(x) {ifelse(is.na(x),0,x)}) %>%
# add month for each observation based on the sheet it came from
mutate(month = lubridate::mdy(paste("Jan","1","2019"))) %>%
bind_rows(data_output)
View(data_output)
9801*99
View(nc_geos_full)
names(nc_geos_full)
# Scratch ########
temp_output <- readxl::read_excel("../../data/LADOT/CPRA #22-10589 Data/2019 Neighborhood Council Trip Matrix.xlsx", sheet = "Jan") %>%
rename("origin_nc" = "Origin\\Destination") %>%
pivot_longer(cols = -c("origin_nc"), names_to = "dest_nc", values_to = "trips")
# might be faster to make it a different table here
data_output = temp_output %>%
# right join. data -- full geos. fill in with 0
right_join(nc_geos_full, by = c("origin_nc" = "origin_data_nc_name",
"dest_nc" = "dest_data_nc_name")) %>%
mutate_at(vars(trips), function(x) {ifelse(is.na(x),0,x)}) %>%
# add month for each observation based on the sheet it came from
mutate(month = lubridate::mdy(paste("Jan","1","2019"))) %>%
bind_rows(data_output)
View(data_output)
View(temp_output)
nc_geos_full %>% count(origin_data_nc_name)
nc_geos_full %>% count(origin_data_nc_name) %>% count(n)
data_output %>% count(origin_nc_id) %>% count(n)
594-596
594-496
# might be faster to make it a different table here
data_output = temp_output %>%
# right join. data -- full geos. fill in with 0
right_join(nc_geos_full, by = c("origin_nc" = "origin_data_nc_name")) %>%
mutate_at(vars(trips), function(x) {ifelse(is.na(x),0,x)}) %>%
# add month for each observation based on the sheet it came from
mutate(month = lubridate::mdy(paste("Jan","1","2019"))) %>%
bind_rows(data_output)
rm(data_output)
# might be faster to make it a different table here
data_output = temp_output %>%
# right join. data -- full geos. fill in with 0
right_join(nc_geos_full, by = c("origin_nc" = "origin_data_nc_name")) %>%
mutate_at(vars(trips), function(x) {ifelse(is.na(x),0,x)}) %>%
# add month for each observation based on the sheet it came from
mutate(month = lubridate::mdy(paste("Jan","1","2019"))) %>%
bind_rows(data_output)
# might be faster to make it a different table here
data_output = temp_output %>%
# right join. data -- full geos. fill in with 0
right_join(nc_geos_full, by = c("origin_nc" = "origin_data_nc_name")) %>%
mutate_at(vars(trips), function(x) {ifelse(is.na(x),0,x)}) %>%
# add month for each observation based on the sheet it came from
mutate(month = lubridate::mdy(paste("Jan","1","2019")))
data_output %>% count(origin_nc_id) %>% count(n)
rm(data_output)
# might be faster to make it a different table here
data_output = temp_output %>%
# right join. data -- full geos. fill in with 0
right_join(nc_geos_full, by = c("origin_nc" = "origin_data_nc_name",
"dest_nc" = "dest_data_nc_name")) %>%
mutate_at(vars(trips), function(x) {ifelse(is.na(x),0,x)}) %>%
# add month for each observation based on the sheet it came from
mutate(month = lubridate::mdy(paste("Jan","1","2019")))
data_output %>% count(origin_nc_id) %>% count(n)
print(data_output %>% count(origin_nc_id) %>% count(n, name = "n_must_equal_nn"))
print(data_output %>% count(origin_nc_id) %>% count(n, name = "n_?=_nn"))
print(data_output %>% count(origin_nc_id) %>% count(n, name = "n_?==_nn"))
data_output <- NULL
rm(temp_output)
for (yr in years) {
# create path to the workbook with a specific year
path_name <- paste("../../data/LADOT/CPRA #22-10589 Data/", yr, " Neighborhood Council Trip Matrix.xlsx", sep = "")
# obtain all the sheet names within the specific workbook
sheet_names <- readxl::excel_sheets(path_name)
# read, clean, and append all the sheets from the specific workbook
for (one_month in sheet_names) {
temp_output <- readxl::read_excel(path_name, sheet = one_month) %>%
rename("origin_nc" = "Origin\\Destination") %>%
pivot_longer(cols = -c("origin_nc"), names_to = "dest_nc", values_to = "trips")
print(paste("Successfully read excel and pivoted wider."))
# might be faster to make it a different table here
data_output = temp_output %>%
# right join. data -- full geos. fill in with 0
right_join(nc_geos_full, by = c("origin_nc" = "origin_data_nc_name",
"dest_nc" = "dest_data_nc_name")) %>%
mutate_at(vars(trips), function(x) {ifelse(is.na(x),0,x)}) %>%
# add month for each observation based on the sheet it came from
mutate(month = lubridate::mdy(paste(one_month,"1",yr))) %>%
bind_rows(data_output)
print(data_output %>% count(origin_nc_id) %>% count(n, name = "n_?==_nn"))
}
}
4455/99
View(data_output)
data_output %>% count(origin_nc_id) %>% count(n)
data_output %>% count(origin_nc_id)
data_output %>% count(origin_new_nc_name)
data_output %>% count(month) %>% count(n)
data_output %>% count(month)
9801*99
9801*45
names(data_output)
head(data_output)
## Rearrange the order
data_output = data_output %>%
select(month, origin_new_nc_name, origin_nc_id, dest_new_nc_name, dest_nc_id, trips, origin_geometry, dest_geometry) %>%
arrange(origin_nc_id, dest_nc_id)
head(data_output)
## Rearrange the order
data_output = data_output %>%
select(month, origin_new_nc_name, origin_nc_id, dest_new_nc_name, dest_nc_id, trips, origin_geometry, dest_geometry) %>%
arrange(month, origin_nc_id, dest_nc_id)
head(data_output)
View(data_output)
data_output %>% count(origin_nc_id)
source("C:/Project/APP/APP/scripts/LADOT_working/OD_by_NCs_script.R", echo=TRUE)
# Export ########
sf::st_write(data_output, "OD_by_NCs_Trips.geojson")
# Export ########
sf::st_write(data_output, "OD_by_NCs_Trips.shp")
